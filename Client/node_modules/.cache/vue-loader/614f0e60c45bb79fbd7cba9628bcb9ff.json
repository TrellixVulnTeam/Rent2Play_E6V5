{"remainingRequest":"/Users/Zakariae/Desktop/Rent2play_full-master/Client/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/Zakariae/Desktop/Rent2play_full-master/Client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Zakariae/Desktop/Rent2play_full-master/Client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Zakariae/Desktop/Rent2play_full-master/Client/src/components/Home/AboutSection.vue?vue&type=template&id=de664c30&scoped=true&","dependencies":[{"path":"/Users/Zakariae/Desktop/Rent2play_full-master/Client/src/components/Home/AboutSection.vue","mtime":1621542260000},{"path":"/Users/Zakariae/Desktop/Rent2play_full-master/Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Zakariae/Desktop/Rent2play_full-master/Client/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/Zakariae/Desktop/Rent2play_full-master/Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Zakariae/Desktop/Rent2play_full-master/Client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}